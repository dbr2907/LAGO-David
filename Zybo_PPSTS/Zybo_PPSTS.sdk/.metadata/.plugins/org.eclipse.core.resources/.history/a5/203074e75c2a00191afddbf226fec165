/* FreeRTOS includes. */
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "timers.h"
/* Xilinx includes. */
#include "xil_printf.h"
#include "xparameters.h"

#define TIMER_ID	1
#define DELAY_10_SECONDS	10000UL
#define DELAY_1_SECOND		1000UL
#define TIMER_CHECK_THRESHOLD	9
/*-----------------------------------------------------------*/
/* The Tx and Rx tasks as described at the top of this file. */
static void P1Task( void *pvParameters );
static void P2Task( void *pvParameters );
/*-----------------------------------------------------------*/
/* The queue used by the Tx and Rx tasks, as described at the top of this
file. */
static TaskHandle_t Print1H;
static TaskHandle_t Print2H;


int main( void ){
	xil_printf( "Hello from Freertos example main\r\n" );
	xTaskCreate(P1Task,
					(const char *) "Print1",
					configMINIMAL_STACK_SIZE,
					NULL,
					tskIDLE_PRIORITY+1,
					&Print1H );

	xTaskCreate(P2Task,
				 (const char *) "Print2",
				 configMINIMAL_STACK_SIZE,
				 NULL,
				 tskIDLE_PRIORITY + 1,
				 &Print2H );

	vTaskStartScheduler();
	for( ;; );
}

/*-----------------------------------------------------------*/
static void P1Task( void *pvParameters ){
	for(;;){
		print("Tarea 1\r\n");
	}
}
/*-----------------------------------------------------------*/
static void P2Task( void *pvParameters ){
	for(;;){
		print("Tarea 2\r\n");
	}
}
/*-----------------------------------------------------------*/
